# Stubs for junit_xml (Python 3.5)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import IO, Any, List, Optional

unichr = chr

class TestSuite:
    name: Any = ...
    test_cases: Any = ...
    timestamp: Any = ...
    hostname: Any = ...
    id: Any = ...
    package: Any = ...
    file: Any = ...
    log: Any = ...
    url: Any = ...
    stdout: Any = ...
    stderr: Any = ...
    properties: Any = ...
    def __init__(
        self,
        name: str,
        test_cases: Optional[Any] = ...,
        hostname: Optional[Any] = ...,
        id: Optional[Any] = ...,
        package: Optional[Any] = ...,
        timestamp: Optional[Any] = ...,
        properties: Optional[Any] = ...,
        file: Optional[Any] = ...,
        log: Optional[Any] = ...,
        url: Optional[Any] = ...,
        stdout: Optional[Any] = ...,
        stderr: Optional[Any] = ...,
    ) -> None: ...

class TestCase:
    name: Any = ...
    assertions: Any = ...
    elapsed_sec: Any = ...
    timestamp: Any = ...
    classname: Any = ...
    status: Any = ...
    category: Any = ...
    file: Any = ...
    line: Any = ...
    log: Any = ...
    url: Any = ...
    stdout: Any = ...
    stderr: Any = ...
    is_enabled: bool = ...
    error_message: Any = ...
    error_output: Any = ...
    error_type: Any = ...
    failure_message: Any = ...
    failure_output: Any = ...
    failure_type: Any = ...
    skipped_message: Any = ...
    skipped_output: Any = ...
    def __init__(
        self,
        name: str,
        classname: Optional[Any] = ...,
        elapsed_sec: Optional[Any] = ...,
        stdout: Optional[Any] = ...,
        stderr: Optional[Any] = ...,
        assertions: Optional[Any] = ...,
        timestamp: Optional[Any] = ...,
        status: Optional[Any] = ...,
        category: Optional[Any] = ...,
        file: Optional[Any] = ...,
        line: Optional[Any] = ...,
        log: Optional[Any] = ...,
        group: Optional[Any] = ...,
        url: Optional[Any] = ...,
    ) -> None: ...
    def add_failure_info(
        self,
        message: Optional[Any] = ...,
        output: Optional[Any] = ...,
        failure_type: Optional[Any] = ...,
    ) -> None: ...
    def add_skipped_info(
        self, message: Optional[Any] = ..., output: Optional[Any] = ...
    ) -> None: ...

def to_xml_report_file(
    file_descriptor: IO[Any],
    test_suites: List[TestSuite],
    prettyprint: bool = True,
    encoding: Optional[str] = None,
) -> None: ...
