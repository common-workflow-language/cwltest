from _typeshed import Incomplete
from apiclient import errors as apiclient_errors

class ApiError(apiclient_errors.HttpError): ...

class KeepRequestError(Exception):
    label: Incomplete
    message: Incomplete
    def __init__(self, message: str = '', request_errors=(), label: str = '') -> None: ...
    def request_errors(self): ...

class HttpError(Exception):
    status_code: Incomplete
    reason: Incomplete
    def __init__(self, status_code, reason) -> None: ...

class ArgumentError(Exception): ...
class SyntaxError(Exception): ...
class AssertionError(Exception): ...
class CommandFailedError(Exception): ...
class KeepReadError(KeepRequestError): ...
class KeepWriteError(KeepRequestError): ...
class KeepCacheError(KeepRequestError): ...
class NotFoundError(KeepReadError): ...
class NotImplementedError(Exception): ...
class NoKeepServersError(Exception): ...
class StaleWriterStateError(Exception): ...
class FeatureNotEnabledError(Exception): ...
