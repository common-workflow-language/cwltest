import httplib2
from . import config as config, errors as errors, keep as keep, retry as retry, util as util
from ._internal import basedirs as basedirs
from .logging import GoogleHTTPClientFilter as GoogleHTTPClientFilter, log_handler as log_handler
from _typeshed import Incomplete
from apiclient import discovery as apiclient_discovery
from typing import Any, Mapping

MAX_IDLE_CONNECTION_DURATION: int

class ThreadSafeHTTPCache:
    def __init__(self, path: Incomplete | None = None, max_age: Incomplete | None = None) -> None: ...
    def get(self, url): ...
    def set(self, url, content) -> None: ...
    def delete(self, url) -> None: ...

class ThreadSafeAPIClient:
    api_token: Incomplete
    request_id: Incomplete
    local: Incomplete
    keep: Incomplete
    def __init__(self, apiconfig: Mapping[str, str] | None = None, keep_params: Mapping[str, Any] | None = {}, api_params: Mapping[str, Any] | None = {}, version: str | None = None) -> None: ...
    def localapi(self) -> googleapiclient.discovery.Resource: ...
    def __getattr__(self, name: str) -> Any: ...

def http_cache(data_type: str) -> ThreadSafeHTTPCache | None: ...
def api_client(version: str, discoveryServiceUrl: str, token: str, *, cache: bool = True, http: httplib2.Http | None = None, insecure: bool = False, num_retries: int = 10, request_id: str | None = None, timeout: int = ..., **kwargs: Any) -> apiclient_discovery.Resource: ...
def normalize_api_kwargs(version: str | None = None, discoveryServiceUrl: str | None = None, host: str | None = None, token: str | None = None, **kwargs: Any) -> dict[str, Any]: ...
def api_kwargs_from_config(version: str | None = None, apiconfig: Mapping[str, str] | None = None, **kwargs: Any) -> dict[str, Any]: ...
def api(version: str | None = None, cache: bool = True, host: str | None = None, token: str | None = None, insecure: bool = False, request_id: str | None = None, timeout: int = ..., *, discoveryServiceUrl: str | None = None, **kwargs: Any) -> ThreadSafeAPIClient: ...
def api_from_config(version: str | None = None, apiconfig: Mapping[str, str] | None = None, **kwargs: Any) -> ThreadSafeAPIClient: ...
